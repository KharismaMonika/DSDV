60c60
< #define DSDV_BROADCAST_JITTER 0.01 // jitter for all broadcast packets
---
> #define DSDV_BROADCAST_JITTER 0.01 // jitter for all broadcast packets, delay pengiriman antar paket
83c83
<   fprintf(fp, "\n line 83 \n"); return (be_random_ ? Random::uniform(max) : 0);
---
>   fprintf(fp, "\n manggil jitter line 83 \n"); return (be_random_ ? Random::uniform(max) : 0);
200c200
<   Time next_possible = a->lasttup_ + DSDV_MIN_TUP_PERIOD; fprintf(fp, "\n line 200");
---
>   Time next_possible = a->lasttup_ + DSDV_MIN_TUP_PERIOD; fprintf(fp, "\n line 200 %.5f", next_possible);
212c212
<       s.schedule(a->trigger_handler, e, next_possible - now); fprintf(fp, "\n line 212");
---
>       s.schedule(a->trigger_handler, e, next_possible - now); fprintf(fp, "\n penjadwalan untuk trigered update line 212");
217c217
<   update_type = 0; fprintf(fp, "\n line 217");
---
>   update_type = 0; fprintf(fp, "\n tipe update 0 line 217");
222c222
<     if (update_type == 1)
---
>     if (update_type == 1) 
224a225
>       fprintf(fp, "jadwal triger dan update bersamaan, batalkan periodik update dan jadwalkan ulang\n");
228c229
<       fprintf(fp, "we got a periodic update, though asked for trigg\n");
---
>       
230,231c231,232
<   		      a->perup_ * (0.75 + jitter (0.25, a->be_random_))); fprintf(fp, "\n line 229");
<   	  if (a->verbose_) a->tracepkt (p, now, a->myaddr_, "PU");	fprintf(fp, "\n line 231");  
---
>   		      a->perup_ * (0.75 + jitter (0.25, a->be_random_))); fprintf(fp, "\n schedule periodic update line 229");
>   	  if (a->verbose_) a->tracepkt (p, now, a->myaddr_, "PU");	fprintf(fp, "\n trace paket periodic updateline 231");  
235a237
>       fprintf(fp, "\nTipe update tdk sama dengan 1 ");
238c240
<         a->tracepkt (p, now, a->myaddr_, "TU");	fprintf(fp, "\n line 238");
---
>         a->tracepkt (p, now, a->myaddr_, "TU");	fprintf(fp, "\n tracepkt triggered update line 238");
243c245
<     s.schedule (a->target_, p, jitter(DSDV_BROADCAST_JITTER, a->be_random_)); fprintf(fp, "\n line 243");
---
>     s.schedule (a->target_, p, jitter(DSDV_BROADCAST_JITTER, a->be_random_)); fprintf(fp, "\n schedule broadcast line 243");
302a305
>   fprintf(fp, "t %.5f \n",t );
313c316
<   s.schedule(trigger_handler, prte->trigger_event, t - now);
---
>   s.schedule(trigger_handler, prte->trigger_event, t - now); fprintf(fp, "penjadwalan untuk trigger\n");
321c324
<   fprintf(fp, "\n \n DSDV_Agent::helper_callback\n");
---
>   
331a335,336
>   fprintf(fp, "\n %.5f DSDV_Agent::helper_callback\n", now);
> 
335c340
<       fprintf(fp, "\n periodic_callback\n");
---
>       fprintf(fp, "\n %.5f (myaddr_: %d) periodic_callback tipe periodic \n", now,myaddr_);
341c346
<         //fprintf(fp, "Jika update krn trigger \n");
---
>         fprintf(fp, "Jika update krn trigger \n");
350c355
<         //fprintf(fp, "Jika update krn periodik \n");
---
>         fprintf(fp, "Jika update krn periodik -- ");
355c360
<         //fprintf(fp, "kayaknya ini broadcast : (myaddr_: %d)..sendout update pkt (periodic=%d)\n",myaddr_,update_type);
---
>         fprintf(fp, "(myaddr_: %d)..penjadwalan delay broadcast -- sendout update pkt (periodic=%d)\n",myaddr_,update_type);
360,362c365,370
<       // the scheduler queue for next time....
<       s.schedule (helper_, periodic_callback_, 
< 		  perup_ * (0.75 + jitter (0.25, be_random_)));
---
>       // the scheduler queue for next time.... Penjadwalan periode update selanjutnya
>       //perup_ = 5;
>       /*s.schedule (helper_, periodic_callback_, 
> 		  perup_ * (0.75 + jitter (0.25, be_random_))); fprintf(fp, "meletakkan periodic update ke queue untuk waktu selanjutnya \n");
> */
>       s.schedule (helper_, periodic_callback_, perup_ );
667c675
<   fprintf(fp, "\n\nDSDV_Agent::updateRoute\n");
---
>   fprintf(fp, "\n\nDSDV_Agent::updateRoute lihat di RTE.txt \n");
706c714
<   fprintf(RTE,"(my address : %d),Route table updated..\n",myaddr_);
---
>   fprintf(RTE,"(\n my address : %d),Route table updated..\n",myaddr_);
718a727
>     fprintf(RTE, "VS%s", buf);
1039d1047
< 
1394c1402,1403
<   fprintf(fp, "\n line 1394 \n"); Time now = Scheduler::instance().clock();
---
>   //fprintf(fp, "\n line 1394 \n"); 
>   Time now = Scheduler::instance().clock();
1426,1427c1435,1436
<   rtable_ent rte; fprintf(fp, "\n line 1426\n");
<   bzero(&rte, sizeof(rte)); fprintf(fp, "\n line 1427 \n"); // sama dengan memset, sebesar ukuran routing table
---
>   rtable_ent rte; fprintf(fp, "nama routing table rte line 1426\n");
>   bzero(&rte, sizeof(rte)); //fprintf(fp, "\n line 1427 \n"); // sama dengan memset, sebesar ukuran routing table
1452c1461
<   table_->AddEntry (rte); fprintf(fp, "\n line 1452\n"); //memasukkan ke tabel
---
>   table_->AddEntry (rte); fprintf(fp, " memasukkan nilai awal ke tabel routing line 1452\n"); //memasukkan ke tabel
1459c1468
<   periodic_callback_ = new Event (); fprintf(fp, "\n line 1459 \n");
---
>   periodic_callback_ = new Event (); fprintf(fp, "deklarasi event, namanya periodic call back line 1459 \n");
1462c1471
< 				   jitter (DSDV_STARTUP_JITTER, be_random_)); fprintf(fp, "\n line 1460");
---
> 				   jitter (DSDV_STARTUP_JITTER, be_random_)); fprintf(fp, "line 1460 memulai schedule periodick callback");
